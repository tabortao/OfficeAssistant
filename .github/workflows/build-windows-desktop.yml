# 构建 Windows 桌面版 (Avalonia UI)
name: Build Windows Desktop (Avalonia UI)
# 触发条件 允许手动触发工作流
on:
  workflow_dispatch: 
    inputs:
      release_tag:
        required: false
        type: string
  # push:
  #   branches:
  #     - main
# 环境变量
env:
  OutputPath64: "${{ github.workspace }}/OfficeAssistant/bin/Release/windows-x64"
  OutputPathArm64: "${{ github.workspace }}/OfficeAssistant/bin/Release/windows-arm64"

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

 # 从项目文件获取版本号
    - name: Get Version
      id: version
      shell: pwsh
      run: |
        $xml = [Xml] (Get-Content OfficeAssistant/OfficeAssistant.csproj)
        $version = $xml.Project.PropertyGroup.Version
        echo "version=$version" >> $env:GITHUB_OUTPUT

    # 构建 x64 版本
    - name: Build x64
      run: |
        dotnet publish OfficeAssistant/OfficeAssistant.csproj `
        -c Release `
        -r win-x64 `
        --self-contained true `
        -p:PublishSingleFile=true `
        -p:EnableCompressionInSingleFile=true `
        -p:DebugType=None `
        -p:DebugSymbols=false `
        -p:EnableWindowsTargeting=true `
        -o "${{ env.OutputPath64 }}"

    # 构建 ARM64 版本
    - name: Build ARM64
      run: |
        dotnet publish OfficeAssistant/OfficeAssistant.csproj `
        -c Release `
        -r win-arm64 `
        --self-contained true `
        -p:PublishSingleFile=true `
        -p:EnableCompressionInSingleFile=true `
        -p:DebugType=None `
        -p:DebugSymbols=false `
        -p:EnableWindowsTargeting=true `
        -o "${{ env.OutputPathArm64 }}"

    # 构建 x64 框架依赖版本（不含运行时）
    - name: Build x64 NO Framework-dependent
      run: |
        dotnet publish OfficeAssistant/OfficeAssistant.csproj `
        -c Release `
        -r win-x64 `
        --self-contained false `
        -p:PublishSingleFile=true `
        -p:DebugType=None `
        -p:DebugSymbols=false `
        -p:EnableWindowsTargeting=true `
        -o "${{ env.OutputPath64 }}-framework"

    # 创建 ZIP 压缩包
    - name: Create ZIP archives
      shell: pwsh
      run: |
        # 使用 PowerShell 命令创建 ZIP（Windows 环境）
        Compress-Archive -Path "${{ env.OutputPath64 }}/*" -DestinationPath "OfficeAssistant-windows-x64-v${{ steps.version.outputs.version }}.zip" -Force
        Compress-Archive -Path "${{ env.OutputPath64 }}-framework/*" -DestinationPath "OfficeAssistant-windows-x64-framework-v${{ steps.version.outputs.version }}.zip" -Force
        Compress-Archive -Path "${{ env.OutputPathArm64 }}/*" -DestinationPath "OfficeAssistant-windows-arm64-v${{ steps.version.outputs.version }}.zip" -Force

    # 上传构建产物
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: OfficeAssistant-Windows-v${{ steps.version.outputs.version }}
        path: |
          ${{ env.OutputPath64 }}
          ${{ env.OutputPath64 }}-framework
          ${{ env.OutputPathArm64 }}
          OfficeAssistant-windows-*.zip
        if-no-files-found: error

    # 创建 GitHub Release
    - name: Create Release
      if: github.event.inputs.release_tag != ''
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        files: |
          OfficeAssistant-windows-x64-v${{ steps.version.outputs.version }}.zip
          OfficeAssistant-windows-x64-framework-v${{ steps.version.outputs.version }}.zip
          OfficeAssistant-windows-arm64-v${{ steps.version.outputs.version }}.zip
        prerelease: true
        generate_release_notes: true