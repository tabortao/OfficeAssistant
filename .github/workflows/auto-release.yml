# 按照要求发布版本时候，触发这个脚本，自动创建一个release
name: Auto Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version from Tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Extract Release Notes
        id: extract_notes
        shell: pwsh
        run: |
          $version = "${{ steps.get_version.outputs.VERSION }}"
          $content = Get-Content -Path "docs/ChangeLogs.md" -Raw
          $pattern = "### $version \([^)]+\)(.*?)(?=### V\d|\z)"
          if ($content -match $pattern) {
              $notes = $matches[1].Trim()
              $notes = $notes -replace '(?m)^#+ *', '### '
              echo "NOTES<<EOF" >> $env:GITHUB_OUTPUT
              echo "$notes" >> $env:GITHUB_OUTPUT
              echo "EOF" >> $env:GITHUB_OUTPUT
          }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.extract_notes.outputs.NOTES }}
          draft: false
          prerelease: false

      - name: Trigger Build All
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build-all.yml',
              ref: 'main',
              inputs: {
                release_tag: '${{ steps.get_version.outputs.VERSION }}'
              }
            })