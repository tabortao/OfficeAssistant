# 构建 Linux 桌面版 (Avalonia UI)
name: Build Linux Desktop (Avalonia UI)

on:
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        type: string
  # 取消推送到main分支时触发工作流
  # push:
  #   branches:
  #     - main

env:
  OutputArch: "linux-x64"
  OutputArchArm: "linux-arm64"
  OutputPath64: "${{ github.workspace }}/OfficeAssistant/bin/Release/linux-x64"
  OutputPathArm64: "${{ github.workspace }}/OfficeAssistant/bin/Release/linux-arm64"

# At the workflow level (near the top of the file)
permissions:
  contents: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: '8.0.x'

    - name: Get Version
      id: version
      shell: bash
      run: |
        version=$(grep -m1 '<Version>' OfficeAssistant/OfficeAssistant.csproj | awk -F'[<>]' '{print $3}')
        echo "version=$version" >> $GITHUB_OUTPUT

    # 构建所有版本
    - name: Build All Versions
      run: |
        CommonParams=(
          "-c" "Release"
          "--self-contained" "true"
          "-p:PublishSingleFile=true"
          "-p:EnableCompressionInSingleFile=true"
          "-p:PublishTrimmed=true"
          "-p:DebugType=None"
          "-p:DebugSymbols=false"
        )
        
        # x64 版本
        dotnet publish OfficeAssistant/OfficeAssistant.csproj \
          "${CommonParams[@]}" \
          -r linux-x64 \
          -o "${{ env.OutputPath64 }}"
        
        # ARM64 版本
        dotnet publish OfficeAssistant/OfficeAssistant.csproj \
          "${CommonParams[@]}" \
          -r linux-arm64 \
          -o "${{ env.OutputPathArm64 }}"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: OfficeAssistant-Linux-v${{ steps.version.outputs.version }}
        path: |
          ${{ github.workspace }}/OfficeAssistant/bin/Release/linux*
        if-no-files-found: error

    # 打包发布文件（仅在发布时执行）
    - name: Prepare Release Packages
      if: github.event.inputs.release_tag != ''
      run: |
        # 安装必要的依赖
        sudo apt-get update
        sudo apt-get install -y desktop-file-utils libfuse2 dpkg-dev

        # 设置脚本权限
        chmod 755 scripts/package-*.sh

        # 创建 DEB 包
        ./scripts/package-debian.sh "${{ env.OutputArch }}" "${{ env.OutputPath64 }}" "${{ steps.version.outputs.version }}"
        ./scripts/package-debian.sh "${{ env.OutputArchArm }}" "${{ env.OutputPathArm64 }}" "${{ steps.version.outputs.version }}"

        # 创建 AppImage (仅 x64 版本)
        export VERSION="${{ steps.version.outputs.version }}"
        export OUTPUT_DIR="${{ env.OutputPath64 }}"
        ./scripts/package-appimage.sh

        # 创建 ZIP
        ./scripts/package-release-zip.sh "${{ env.OutputArch }}" "${{ env.OutputPath64 }}" "${{ steps.version.outputs.version }}"
        ./scripts/package-release-zip.sh "${{ env.OutputArchArm }}" "${{ env.OutputPathArm64 }}" "${{ steps.version.outputs.version }}"

    - name: Create Release
      if: github.event.inputs.release_tag != ''
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        files: |
          OfficeAssistant-linux-x64-v${{ steps.version.outputs.version }}.deb
          OfficeAssistant-linux-arm64-v${{ steps.version.outputs.version }}.deb
          OfficeAssistant-linux-x64-v${{ steps.version.outputs.version }}.AppImage
          OfficeAssistant-linux-x64-v${{ steps.version.outputs.version }}.zip
          OfficeAssistant-linux-arm64-v${{ steps.version.outputs.version }}.zip
        prerelease: true
        generate_release_notes: true