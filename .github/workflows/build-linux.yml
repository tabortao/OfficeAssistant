# 构建 Linux 桌面版 (Avalonia UI)
name: Build Linux Desktop (Avalonia UI)

on:
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        type: string
  push:
    branches:
      - main

env:
  OutputArch: "linux-x64"
  OutputArchArm: "linux-arm64"
  OutputPath64: "${{ github.workspace }}/OfficeAssistant/bin/Release/linux-x64"
  OutputPathArm64: "${{ github.workspace }}/OfficeAssistant/bin/Release/linux-arm64"

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - name: Setup .NET
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: '8.0.x'

    - name: Get Version
      id: version
      shell: bash
      run: |
        version=$(grep -m1 '<Version>' OfficeAssistant/OfficeAssistant.csproj | awk -F'[<>]' '{print $3}')
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        dotnet publish OfficeAssistant/OfficeAssistant.csproj \
        -c Release \
        -r linux-x64 \
        --self-contained true \
        -p:PublishSingleFile=true \
        -p:EnableCompressionInSingleFile=true \
        -p:PublishTrimmed=true \
        -p:DebugType=None \
        -p:DebugSymbols=false \
        -o "${{ env.OutputPath64 }}"

        dotnet publish OfficeAssistant/OfficeAssistant.csproj \
        -c Release \
        -r linux-arm64 \
        --self-contained true \
        -p:PublishSingleFile=true \
        -p:EnableCompressionInSingleFile=true \
        -p:PublishTrimmed=true \
        -p:DebugType=None \
        -p:DebugSymbols=false \
        -o "${{ env.OutputPathArm64 }}"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: OfficeAssistant-Linux-v${{ steps.version.outputs.version }}
        path: |
          ${{ github.workspace }}/OfficeAssistant/bin/Release/linux*

    # 打包 DEB
    - name: Package Debian
      if: github.event.inputs.release_tag != ''
      run: |
        chmod 755 scripts/package-debian.sh
        ./scripts/package-debian.sh ${{ env.OutputArch }} ${{ env.OutputPath64 }} ${{ github.event.inputs.release_tag }}
        ./scripts/package-debian.sh ${{ env.OutputArchArm }} ${{ env.OutputPathArm64 }} ${{ github.event.inputs.release_tag }}

    - name: Upload DEB to release
      uses: svenstaro/upload-release-action@v2
      if: github.event.inputs.release_tag != ''
      with:
        file: ${{ github.workspace }}/OfficeAssistant*.deb
        tag: ${{ github.event.inputs.release_tag }}
        file_glob: true
        prerelease: true

    # 打包 AppImage
    - name: Package AppImage
      if: github.event.inputs.release_tag != ''
      run: |
        chmod 755 scripts/package-appimage.sh
        ./scripts/package-appimage.sh

    - name: Upload AppImage to release
      uses: svenstaro/upload-release-action@v2
      if: github.event.inputs.release_tag != ''
      with:
        file: ${{ github.workspace }}/OfficeAssistant*.AppImage
        tag: ${{ github.event.inputs.release_tag }}
        file_glob: true
        prerelease: true

    # 打包 ZIP
    - name: Package ZIP archive
      if: github.event.inputs.release_tag != ''
      run: |
        chmod 755 scripts/package-release-zip.sh
        ./scripts/package-release-zip.sh ${{ env.OutputArch }} ${{ env.OutputPath64 }}
        ./scripts/package-release-zip.sh ${{ env.OutputArchArm }} ${{ env.OutputPathArm64 }}

    - name: Upload ZIP to release
      uses: svenstaro/upload-release-action@v2
      if: github.event.inputs.release_tag != ''
      with:
        file: ${{ github.workspace }}/OfficeAssistant*.zip
        tag: ${{ github.event.inputs.release_tag }}
        file_glob: true
        prerelease: true