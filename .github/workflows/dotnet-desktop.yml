name: .NET Core Desktop  # 工作流名称

on:  # 触发工作流的事件
  push:  # 当代码推送时触发
    branches: [ "main" ]  # 仅在 main 分支上触发
  pull_request:  # 当创建 Pull Request 时触发
    branches: [ "main" ]  # 仅针对 main 分支的 PR

jobs:  # 定义工作流中的作业
  build-windows:  # Windows 构建作业
    strategy:
      matrix:
        configuration: [Release]  # 只构建 Release 版本

    runs-on: windows-latest  # 在最新版本的 Windows 运行器上运行

    env:  # 环境变量设置
      Solution_Name: OfficeAssistant.sln  # 解决方案文件名

    steps:  # 构建步骤
    - name: Checkout  # 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的版本历史

    - name: Install .NET Core  # 安装 .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x  # 使用 .NET 8.0 版本

    - name: Restore dependencies  # 还原项目依赖
      run: dotnet restore

    - name: Restore runtime  # 添加这个新步骤
      run: dotnet restore OfficeAssistant/OfficeAssistant.csproj -r win-x64

    - name: Build (Framework-dependent)
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore

    - name: Get Version  # 添加获取版本号的步骤
      id: version
      run: |
        $xml = [Xml] (Get-Content OfficeAssistant/OfficeAssistant.csproj)
        $version = $xml.Project.PropertyGroup.Version
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Restore dependencies
      run: dotnet restore

    - name: Build (Framework-dependent)
      run: dotnet publish OfficeAssistant/OfficeAssistant.csproj --configuration ${{ matrix.configuration }} --no-restore -p:PublishSingleFile=true

    - name: Build (Self-contained)
      run: dotnet publish OfficeAssistant/OfficeAssistant.csproj --configuration ${{ matrix.configuration }} --no-restore -r win-x64 --self-contained true -p:PublishSingleFile=true -p:EnableCompressionInSingleFile=true

    - name: Upload Framework-dependent artifacts
      uses: actions/upload-artifact@v4
      with:
        name: OfficeAssistant-Windows-Framework-v${{ steps.version.outputs.version }}
        path: |
          OfficeAssistant/bin/${{ matrix.configuration }}/net8.0/publish/**/*
        exclude: |
          **/*.pdb
          **/*.xml

    - name: Upload Self-contained artifacts
      uses: actions/upload-artifact@v4
      with:
        name: OfficeAssistant-Windows-Self-contained-v${{ steps.version.outputs.version }}
        path: |
          OfficeAssistant/bin/${{ matrix.configuration }}/net8.0/win-x64/publish/**/*
        exclude: |
          **/*.pdb
          **/*.xml

  build-macos:  # macOS 构建作业
    strategy:
      matrix:
        configuration: [Release]  # 只构建 Release 版本
    
    runs-on: macos-latest  # 在最新版本的 macOS 运行器上运行

    env:  # 环境变量设置
      Solution_Name: OfficeAssistant.sln  # 解决方案文件名

    steps:  # 构建步骤
    - name: Checkout  # 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的版本历史

    - name: Install .NET Core  # 安装 .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x  # 使用 .NET 8.0 版本

    - name: Restore dependencies  # 还原项目依赖
      run: dotnet restore

    - name: Restore runtime  # 添加这个新步骤
      run: dotnet restore OfficeAssistant/OfficeAssistant.csproj -r osx-x64

    - name: Get Version
      id: version
      run: |
        VERSION=$(grep -m1 "<Version>" OfficeAssistant/OfficeAssistant.csproj | sed 's/.*<Version>\(.*\)<\/Version>.*/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        dotnet publish OfficeAssistant/OfficeAssistant.csproj \
        --configuration ${{ matrix.configuration }} \
        --no-restore \
        -r osx-x64 \
        --self-contained true \
        -p:PublishSingleFile=true \
        -p:EnableCompressionInSingleFile=true \
        -p:IncludeNativeLibrariesForSelfExtract=true \
        -p:CreateMacBundle=true \
        -p:CFBundleName="OfficeAssistant" \
        -p:CFBundleDisplayName="OfficeAssistant" \
        -p:CFBundleIdentifier="com.yourcompany.officeassistant" \
        -p:CFBundleVersion="${{ steps.version.outputs.version }}" \
        -p:CFBundleShortVersionString="${{ steps.version.outputs.version }}" \
        -p:CFBundlePackageType="APPL" \
        -p:CFBundleSignature="????" \
        -p:NSHighResolutionCapable=true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: OfficeAssistant-macOS-v${{ steps.version.outputs.version }}
        path: |
          OfficeAssistant/bin/${{ matrix.configuration }}/net8.0/osx-x64/publish/*.app
